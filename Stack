#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define	SIZE	10	

struct stack{
	int sta[SIZE];
	int top;
};

void init_stack(struct stack* s)
{
	memset(s->sta, 0, sizeof(s->sta));
	s->top = -1;
}

int Push(struct stack* s, int data)
{
	if(s->top == SIZE-1){
		printf("the stack is full. \n");
		return 1;
	}	

	(s->top)++;
	s->sta[s->top] = data;
	return 0;
}

int Pop(struct stack* s)
{
	int tmp;
	if(s->top < 0 ){
		printf("the stack is empty. \n");
		return -1;
	} else {
		tmp = (s->sta)[s->top]; 
		(s->top)--;
		return tmp;	
	}
}

void destory(struct stack *s)
{
	s->top = -1;
	memset(s->sta, 0, sizeof(s->sta));
}

int main()
{
	struct stack S;
	init_stack(&S);
	int i , ret ;

	for(i=0; i<SIZE; i++){
		ret = Push(&S, i+10);
		if(ret > 0){
			printf("Push error. \n");	
			exit(1);
		}
	}

	for(i=0; i<SIZE; i++){
		ret = Pop(&S);
		if(ret < 0){
			printf("Pop error. \n");	
			exit(1);
		}
		printf("%d\t", ret);
	}

	printf("\n");

	destory(&S);

	return 0;
}

