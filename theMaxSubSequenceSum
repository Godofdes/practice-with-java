//T=O(N^3)
public class MaxSubSequenceSum {
	int ThisSum,Maxsum,i,j,k;
	public int Demo(int A[],int N){
		Maxsum=0;
		for(i=0;i<N;i++)
			for(j=i;j<N;j++)
			{
				ThisSum = 0;
				for(k=i;k<=j;k++)
					ThisSum += A[k];
				
				if(ThisSum > Maxsum)
					Maxsum = ThisSum;
			}
		return Maxsum;
	}
//T=O(N^2)
public class MaxSubSequenceSum {
	int ThisSum,Maxsum,i,j,k;
	public int Demo(int A[],int N){
		Maxsum=0;
		for(i=0;i<N;i++)
		{
			ThisSum=0;
			for(j=i;j<N;j++)
			{
				ThisSum+=A[j];
				
				if(ThisSum>Maxsum)
					Maxsum=ThisSum;
			}
		}
		return Maxsum;
	}
//T=O(N)
public class MaxSubSequenceSum {
	int ThisSum,Maxsum,i;
	public int Demo(int A[],int N){
		ThisSum=Maxsum=0;
		for(i=0;i<N;i++)
		{
			ThisSum +=A[i];
			
			if(ThisSum>Maxsum)
				Maxsum=ThisSum;
			else if(ThisSum<0)
				ThisSum=0;
		}
		return Maxsum;
	}
